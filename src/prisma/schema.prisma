// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Discipline {
  id Int @id @default(autoincrement())

  jobs Job[]

  name String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Area {
  id Int @id @default(autoincrement())

  jobs Job[]

  name String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Role {
  id Int @id @default(autoincrement())

  jobs Job[]

  name String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Job {
  id Int @id @default(autoincrement())

  discipline   Discipline? @relation(fields: [disciplineId], references: [id])
  disciplineId Int?
  area         Area?       @relation(fields: [areaId], references: [id])
  areaId       Int?
  role         Role?       @relation(fields: [roleId], references: [id])
  roleId       Int?

  name String

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model PageView {
  id Int @id @default(autoincrement())

  name  String @unique
  count String

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model CourseCategory {
  id Int @id @default(autoincrement())

  courses Course[]

  name String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

}

model Course {
  id Int @id @default(autoincrement())

  CourseCategory   CourseCategory? @relation(fields: [courseCategoryId], references: [id])
  courseCategoryId Int?

  name        String
  description String?
  price       String
  avatarUrl   String
  imageUrl    String
  author      String
  locale      String
}
